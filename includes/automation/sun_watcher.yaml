- alias: "sun_sunrise"
  trigger:
    - platform: state
      entity_id: sun.sun
      to: "above_horizon"
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.sunrise
        time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
    - service: telegram_bot.send_message
      data_template:
        target: !secret tg_chat_dima
        message: "{{ states['sensor.now_hm'].state }} {{ '\U0001f305' }} {{ states['sensor.solar_elevation'].state_with_unit}}, {{ states['sensor.solar_azimuth'].state_with_unit}} #sun #sunrise"

- alias: "sun_sunset"
  trigger:
    - platform: state
      entity_id: sun.sun
      to: "below_horizon"
  action:
    - service: input_datetime.set_datetime
      data_template:
        entity_id: input_datetime.sunset
        time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
    - service: telegram_bot.send_message
      data_template:
        target: !secret tg_chat_dima
        message: "{{ states['sensor.now_hm'].state }} {{ '\U0001f307' }} {{ states['sensor.solar_elevation'].state_with_unit}}, {{ states['sensor.solar_azimuth'].state_with_unit}} #sun #sunset"

- alias: "sun_zenith"
  trigger:
    - platform: state
      entity_id: binary_sensor.sun_is_rising
      from: "on"
      to: "off"
  action:
    - service: input_datetime.set_datetime
      data_template:
        time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
        entity_id: input_datetime.zenith
    - service: input_number.set_value
      data_template:
        value: "{{ states['sensor.solar_elevation'].state }}"
        entity_id: input_number.zenith
    - service: telegram_bot.send_message
      data_template:
        target: !secret tg_chat_dima
        message: "{{ states['sensor.now_hm'].state }} {{ '\U0001f31e' }} {{ states['sensor.solar_elevation'].state_with_unit}}, {{ states['sensor.solar_azimuth'].state_with_unit}} #sun #zenith"

- alias: "sun_nadir"
  trigger:
    - platform: state
      entity_id: binary_sensor.sun_is_rising
      from: "off"
      to: "on"
  action:
    - service: input_datetime.set_datetime
      data_template:
        time: '{{ (as_timestamp(now()) | timestamp_custom("%H:%M:%S", true)) }}'
        entity_id: input_datetime.nadir
    - service: input_number.set_value
      data_template:
        value: "{{ states['sensor.solar_elevation'].state }}"
        entity_id: input_number.nadir
    - service: telegram_bot.send_message
      data_template:
        target: !secret tg_chat_dima
        message: "{{ states['sensor.now_hm'].state }} {{ '\U0001f303' }} {{ states['sensor.solar_elevation'].state_with_unit}}, {{ states['sensor.solar_azimuth'].state_with_unit}} #sun #nadir"