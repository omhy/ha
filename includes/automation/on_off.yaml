# - alias: "computer_power_strip_off"
#   trigger:
#     - platform: time
#       at: "02:00:00"
#   action:
#     - service: switch.turn_off
#       entity_id: switch.power_strip_1

# - alias: "computer_power_strip_on"
#   trigger:
#     - platform: time
#       at: "06:50:00"
#   action:
#     - service: switch.turn_on
#       entity_id: switch.power_strip_1

- alias: "computer_turned_off"
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_computer
      from: "on"
      to: "off"
      for:
        minutes: 3
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 🖥️ is 🔴 ({{ states['sensor.computer_on_today'].state_with_unit }}) #comp"

- alias: "computer_turned_on"
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_computer
      from: "off"
      to: "on"
      for:
        minutes: 3
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 🖥️ is 🟢 ({{ states['sensor.computer_on_today'].state_with_unit }}) #comp"

- alias: "laptop_turned_off"
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_laptop
      from: "on"
      to: "off"
      for:
        minutes: 3
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 💻 is 🔴 ({{ states['sensor.laptop_on_today'].state_with_unit }}) #ntbk"

- alias: "laptop_turned_on"
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_laptop
      from: "off"
      to: "on"
      for:
        minutes: 3
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 💻 is 🟢 ({{ states['sensor.laptop_on_today'].state_with_unit }}) #ntbk"

- alias: "tv_turned_off"
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_tv
      from: "on"
      to: "off"
      for:
        minutes: 1
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 📺 is 🔴 ({{ states['sensor.tv_on_today'].state_with_unit }}) #tv"

- alias: "tv_turned_on"
  trigger:
    - platform: state
      entity_id: binary_sensor.ping_tv
      from: "off"
      to: "on"
      for:
        minutes: 2
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 📺 is 🟢 ({{ states['sensor.tv_on_today'].state_with_unit }}) #tv"