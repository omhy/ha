- alias: "telega_callback_people"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/people"
  action:
    - service: telegram_bot.answer_callback_query
      data:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Roger {{ trigger.event.data.data }}"
    - service: telegram_bot.send_message
      data:
        target: "{{ trigger.event.data.user_id }}"
        message: "Select person to check"
        inline_keyboard:
          - "👨 Dima:/tracker dima, 👩 Alyona:/tracker alyona"
          - "👦 Yury:/tracker yury, 👧 Elisa:/tracker elisa"
          - "♻️ Dismiss:/dismiss"

- alias: "telega_handle_prefix_tracker"
  trigger:
    - platform: event
      event_type: telegram_callback
  condition: "{{ trigger.event.data.data.startswith('/tracker ') }}"
  action:
    - service: telegram_bot.answer_callback_query
      data:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Roger {{ trigger.event.data.data }}"
    - service: telegram_bot.send_message
      data:
        target: "{{ trigger.event.data.user_id }}"
        message: >
          {% set id = trigger.event.data.data.split(' ', 1)[1] %}
          {{ states.person[id].attributes.friendly_name }} is `{{ states.person[id].state }}` with GPS accuracy {{ states.person[id].attributes.gps_accuracy }}.

          `{{ (states.sensor[id + '_geocoded_location'].state) | replace("\n", ", ")}}`
        inline_keyboard:
          - "🗺 Map:/map {{ trigger.event.data.data.split(' ', 1)[1] }}, 🔄 Refresh:{{ trigger.event.data.data }}, ♻️ Dismiss:/dismiss"

- alias: "telega_handle_prefix_map"
  trigger:
    - platform: event
      event_type: telegram_callback
  condition: "{{ trigger.event.data.data.startswith('/map ') }}"
  action:
    - service: telegram_bot.answer_callback_query
      data:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Roger {{ trigger.event.data.data }}"
    - service: telegram_bot.send_location
      data:
        target: "{{ trigger.event.data.user_id }}"
        latitude: "{{ states.person[trigger.event.data.data.split(' ', 1)[1]].attributes.latitude }}"
        longitude: "{{ states.person[trigger.event.data.data.split(' ', 1)[1]].attributes.longitude }}"
        inline_keyboard:
          - "🔄 Refresh:{{ trigger.event.data.data }}, ♻️ Dismiss:/dismiss"