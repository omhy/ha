- alias: "watcher_state"
  trigger:
    - platform: state
      entity_id:
        - sensor.dmitry_weight
  condition: "{{ trigger.from_state.state != trigger.to_state.state }}"
  action:
    - service: notify.telegram_dima
      data:
        message: "{{ states('sensor.now_hm') }} 🔵 `{{ trigger.from_state.attributes.friendly_name }}: {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}`"

- alias: "watcher_coronavirus"
  trigger:
    - platform: state
      entity_id:
        - sensor.latvia_coronavirus_current
        - sensor.estonia_coronavirus_current
        - sensor.lithuania_coronavirus_current
        - sensor.sweden_coronavirus_current
  action:
    - service: notify.telegram_dima
      data:
        message: >
          {% set name = trigger.from_state.attributes.friendly_name %}
          {% set cntr = name.split()[0] %}
          {% set cntru = cntr|upper %}
          {% set from = trigger.from_state.state|int %}
          {% set to = trigger.to_state.state|int %}
          {% set chg = to - from %}
          {% set prc = (chg / from * 100)|round(2) %}
          {{ states('sensor.now_hm') }} 📊 `{{ cntr }}:` {{ from }} -> {{ to }} | {{ chg }} | {{ prc }} % | #covid

- alias: "watcher_google_cast_updated"
  trigger:
    - platform: state
      entity_id:
        - sensor.cast_version_black_speaker
        - sensor.cast_version_kitchen_display
        - sensor.cast_version_loud_speaker
        - sensor.cast_version_yury_speaker
        - sensor.cast_version_chromecast
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tg_chat_dima
        message: "{{ states('sensor.now_hm') }} ⬆️ `{{ trigger.from_state.attributes.friendly_name }}` updated {{ trigger.from_state.state }} -> {{ trigger.to_state.state }}"
        inline_keyboard:
          - "♻️ Dismiss:/dismiss"

- alias: "watcher_weight_dima"
  trigger:
    - platform: state
      entity_id:
        - sensor.dmitry_weight
  action:
    - service: notify.telegram_dima
      data:
        message: >
          {{ states('sensor.now_hm') }} ⚖️ {{ states['sensor.dmitry_weight'].state_with_unit }}

          `{{ state_attr('sensor.dmitry_bmi', 'friendly_name') }}:` {{ states['sensor.dmitry_bmi'].state_with_unit }}

          `{{ state_attr('sensor.dmitry_body_fat', 'friendly_name') }}:` {{ states['sensor.dmitry_body_fat'].state_with_unit }}

          `{{ state_attr('sensor.dmitry_bone_mass', 'friendly_name') }}:` {{ states['sensor.dmitry_bone_mass'].state_with_unit }}

          `{{ state_attr('sensor.dmitry_muscle_mass', 'friendly_name') }}:` {{ states['sensor.dmitry_muscle_mass'].state_with_unit }}

          `{{ state_attr('sensor.dmitry_visceral_fat', 'friendly_name') }}:` {{ states['sensor.dmitry_visceral_fat'].state_with_unit }}

          `{{ state_attr('sensor.dmitry_water', 'friendly_name') }}:` {{ states['sensor.dmitry_water'].state_with_unit }}

          `{{ states('sensor.dmitry_body_type') }}`

          #WeightDima